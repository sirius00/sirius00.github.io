[{"content":"创建数据库 create database 数据库名\n删除数据库 drop database 数据库名\nmysql数据类型 数值类型 类型 大小 范围（有符号） 范围（无符号） 用途 TINYINT 1 Bytes (-128，127) (0，255) 小整数值 SMALLINT 2 Bytes (-32 768，32 767) (0，65 535) 大整数值 MEDIUMINT 3 Bytes (-8 388 608，8 388 607) (0，16 777 215) 大整数值 INT或INTEGER 4 Bytes (-2 147 483 648，2 147 483 647) (0，4 294 967 295) 大整数值 BIGINT 8 Bytes (-9,223,372,036,854,775,808，9 223 372 036 854 775 807) (0，18 446 744 073 709 551 615) 极大整数值 FLOAT 4 Bytes (-3.402 823 466 E+38，-1.175 494 351 E-38)，0，(1.175 494 351 E-38，3.402 823 466 351 E+38) 0，(1.175 494 351 E-38，3.402 823 466 E+38) 单精度 浮点数值 DOUBLE 8 Bytes (-1.797 693 134 862 315 7 E+308，-2.225 073 858 507 201 4 E-308)，0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308) 0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308) 双精度 浮点数值 DECIMAL 对DECIMAL(M,D) ，如果M\u0026gt;D，为M+2否则为D+2 依赖于M和D的值 依赖于M和D的值 小数值 日期/时间类型 类型 大小 ( bytes) 范围 格式 用途 DATE 3 1000-01-01/9999-12-31 YYYY-MM-DD 日期值 TIME 3 \u0026lsquo;-838:59:59\u0026rsquo;/\u0026lsquo;838:59:59\u0026rsquo; HH:MM:SS 时间值或持续时间 YEAR 1 1901/2155 YYYY 年份值 DATETIME 8 \u0026lsquo;1000-01-01 00:00:00\u0026rsquo; 到 \u0026lsquo;9999-12-31 23:59:59\u0026rsquo; YYYY-MM-DD hh:mm:ss 混合日期和时间值 TIMESTAMP 4 \u0026lsquo;1970-01-01 00:00:01\u0026rsquo; UTC 到 \u0026lsquo;2038-01-19 03:14:07\u0026rsquo; UTC结束时间是第 2147483647 秒，北京时间 2038-1-19 11:14:07，格林尼治时间 2038年1月19日 凌晨 03:14:07 YYYY-MM-DD hh:mm:ss 混合日期和时间值，时间戳 字符串类型 类型 大小 用途 CHAR 0-255 bytes 定长字符串 VARCHAR 0-65535 bytes 变长字符串 TINYBLOB 0-255 bytes 不超过 255 个字符的二进制字符串 TINYTEXT 0-255 bytes 短文本字符串 BLOB 0-65 535 bytes 二进制形式的长文本数据 TEXT 0-65 535 bytes 长文本数据 MEDIUMBLOB 0-16 777 215 bytes 二进制形式的中等长度文本数据 MEDIUMTEXT 0-16 777 215 bytes 中等长度文本数据 LONGBLOB 0-4 294 967 295 bytes 二进制形式的极大文本数据 LONGTEXT 0-4 294 967 295 bytes 极大文本数据 mysql的基本使用 select 语句 select username， passward from users； insert into 语句 向数据表中插入新的数据行 insert into users (username, passward) values (\u0026#39;王五\u0026#39;, \u0026#39;555\u0026#39;); update 语句 更新数据表 语法： UPDATE 表名称 SET 列名称=新值 WHERE 列名称=某值 示例1， 更新某一行某一列： update users set passward=\u0026#39;333\u0026#39; where id=1; 示例2， 更新某一行的若干列： update users set passward=\u0026#39;ceshi\u0026#39;, status=1 where id=3; delete 语句 用于 删除表中的行\n语法： DELETE FROM 表名称 WHERE 列名称=值 示例： delete from users where id=3； where 子句 WHERE 子句用于限定选择的标准。在 SELECT、 UPDATE、 DELETE 语句中，皆可使用 WHERE 子句来限定选择的标准。\n查询语句中的 WHERE 条件 SELECT 列名称 FROM 表名称 WHERE 列 运算符 值 更新语句中的 WHERE 条件 UPDATE 表名称 SET 列-新值 WHERE 列 运算符 值 删除语句中的 WHERE 条件 DELETE FROM 表名称 WHERE 列 运算符 值\n实例： select * from users where username\u0026lt;\u0026gt;\u0026#39;张三\u0026#39;; select * from users where username like \u0026#39;%三\u0026#39;; 可以使用的运算符： AND 和 OR 运算符 语法： AND 和 OR 可在 WHERE 子语句中把两个或多个条件结合起来。\nAND 表示必须同时满足多个条件，相当于 JavaScript 中的 ＆＆ 运算符，例如计 (a !== 10 \u0026amp;\u0026amp; a!== 20)\nOR 表示只要满足任意一个条件即可，相当于 JavaScript 中的 运算符，例如 if(a !== 10 ll a !== 20)\nselect * from users where status=0 and id\u0026gt;2; order by 子句 语法： ORDER BY 语句用于根据指定的列对结果集进行排序。 ORDER BY 语句默认按照升序对记录进行排序。 如果您希望按照降序对记录进行排序，可以使用 DESC 关键字。\n使用示例：\nselect * from users order by status; select * from users order by status DESC; # 降序排列 （ASC升序） 多重排序\n对 users 表中的数据，先按照 status 字段进行降序排序，再按照 username 的字母顺序，进行升序排序，示例如下： select * from users order by status DESC, username ASC; cout（*） 函数和 as 关键字 count（*）函数 COUNT(*) 函数用于返回查询结果的总数据条数，语法格式如下：\nselect count（*） from 表名； select count（*） from users where status=0； as 关键字 如果希望给查询出来的列名称设置别名，可以使用 AS 关键字，示例如下：\nselect count(*) as total from users where status=0； ","permalink":"https://sirius00.github.io/posts/tech/mysql%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/","summary":"创建数据库 create database 数据库名 删除数据库 drop database 数据库名 mysql数据类型 数值类型 类型 大小 范围（有符号） 范围（无符号） 用途 TINYINT 1 Bytes (-128，127) (0，255) 小整数值 SMALLINT 2 Bytes (-32 768，32 767) (0，65 535) 大整数值 MEDIUMINT 3 Bytes (-8 388 608，8 388 607) (0，16 777 215) 大整数值 INT或INTEGER 4 Bytes (-2 147 483 6","title":"Mysql的基本使用"},{"content":"","permalink":"https://sirius00.github.io/posts/tech/git%E7%9A%84%E4%BD%BF%E7%94%A8/","summary":"","title":"Git的使用"},{"content":"","permalink":"https://sirius00.github.io/posts/blog/blog/","summary":"","title":"Blog"},{"content":"","permalink":"https://sirius00.github.io/posts/life/life/","summary":"","title":"Life"},{"content":"","permalink":"https://sirius00.github.io/posts/read/read/","summary":"","title":"Read"},{"content":" Sulv\u0026#39;s Blog 一个记录技术、阅读、生活的博客 👉友链格式 名称： Sulv\u0026rsquo;s Blog 网址： https://www.sulvblog.cn 图标： https://www.sulvblog.cn/img/Q.gif 描述： 一个记录技术、阅读、生活的博客 👉友链申请要求 秉承互换友链原则、文章定期更新、不能有太多广告、个人描述字数控制在15字内\n👉Hugo博客交流群 787018782\n","permalink":"https://sirius00.github.io/links/","summary":"Sulv\u0026#39;s Blog 一个记录技术、阅读、生活的博客 👉友链格式 名称： Sulv\u0026rsquo;s Blog 网址： https://www.sulvblog.cn 图标： https://www.sulvblog.cn/img/Q.gif 描述： 一个记录技术、阅读、生活的博客 👉友链申请要求 秉承互换友链原则、文章定期更新、不能有太多广告、个人描述字数控制在15字内 👉Hugo博客交流群 787018782","title":"🤝友链"},{"content":"关于我\n英文名: Limene Xu 职业: 程序员 运动: 跑步、乒乓球、爬山 ","permalink":"https://sirius00.github.io/about/","summary":"关于我 英文名: Limene Xu 职业: 程序员 运动: 跑步、乒乓球、爬山","title":"🙋🏻‍♂️关于"}]